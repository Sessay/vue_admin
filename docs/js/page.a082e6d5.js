(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["page"],{"0889":function(e,t,c){e.exports=c.p+"img/commit3.ceefddf8.jpg"},"1bf9":function(e,t,c){e.exports=c.p+"img/commit2.79ad6224.jpg"},"358a":function(e,t,c){"use strict";c.r(t);var o=c("7a23"),n=c("6871"),l=c.n(n),m=c("66d4"),s=c.n(m),a=c("ca79"),i=c.n(a),r=c("35c1"),b=c.n(r),d=Object(o["defineComponent"])({setup:function(e){return function(e,t){var c=Object(o["resolveComponent"])("el-image"),n=Object(o["resolveComponent"])("el-card");return Object(o["openBlock"])(),Object(o["createBlock"])(n,{class:"common-card"},{default:Object(o["withCtx"])((function(){return[Object(o["createVNode"])(c,{style:{width:"100px",height:"100px"},src:Object(o["unref"])(s.a),"initial-index":4,class:"ending-img",fit:"cover"},null,8,["src"]),Object(o["createVNode"])(c,{style:{width:"100px",height:"100px"},src:Object(o["unref"])(l.a),"preview-src-list":[Object(o["unref"])(i.a),Object(o["unref"])(b.a)],"initial-index":4,"hide-on-click-modal":!0,class:"money-img",fit:"cover","z-index":1100},null,8,["src","preview-src-list"])]})),_:1})}}}),j=(c("a8f1"),c("6b0d")),u=c.n(j);const p=u()(d,[["__scopeId","data-v-06418489"]]);t["default"]=p},"35c1":function(e,t,c){e.exports=c.p+"img/zfb.fc3eafe3.jpg"},"536c":function(e,t,c){e.exports=c.p+"img/husky.d1ed3c0d.jpg"},5505:function(e,t,c){"use strict";c.r(t);var o=c("7a23"),n=c("5abd"),l=c.n(n),m=c("e8b8"),s=c.n(m),a=c("b174"),i=c.n(a),r=c("1bf9"),b=c.n(r),d=c("0889"),j=c.n(d),u=Object(o["createElementVNode"])("div",{class:"common-title"},"commitlint 简介及配置",-1),p={class:"common-content"},O={class:"common-sub-title"},N=Object(o["createElementVNode"])("span",null,"commitlint 是什么",-1),f={class:"common-content-block"},V=Object(o["createTextVNode"])(" commitlint 是一个git commit校验约束工具。当我们运行git commmit -m 'xxx'时，来检查'xxx'是不是满足团队约定好的提交规范。提交格式如下图 "),g={class:"common-content-block"},k=Object(o["createTextVNode"])(" 实现效果： "),v={class:"common-sub-title"},E=Object(o["createElementVNode"])("span",null,"commitlint 配置",-1),h={class:"common-content-block"},x=Object(o["createTextVNode"])(' 配合husky使用，运行npx husky add .husky/commit-msg "npx --no-install commitlint --edit $1"命令 '),w=Object(o["createElementVNode"])("p",{class:"common-content-block"},[Object(o["createTextVNode"])(" 文档地址： "),Object(o["createElementVNode"])("a",{target:"_bank",href:"https://github.com/conventional-changelog/commitlint"}," https://github.com/conventional-changelog/commitlint ")],-1),C=Object(o["defineComponent"])({setup:function(e){return function(e,t){var c=Object(o["resolveComponent"])("svg-icon"),n=Object(o["resolveComponent"])("el-image"),m=Object(o["resolveComponent"])("el-card");return Object(o["openBlock"])(),Object(o["createBlock"])(m,{class:"common-card"},{default:Object(o["withCtx"])((function(){return[u,Object(o["createElementVNode"])("div",p,[Object(o["createElementVNode"])("div",O,[Object(o["createVNode"])(c,{svgClass:"common-sub-svg",iconName:"watch"}),N]),Object(o["createElementVNode"])("p",f,[V,Object(o["createVNode"])(n,{src:Object(o["unref"])(l.a),"preview-src-list":[Object(o["unref"])(l.a)],"initial-index":4,"hide-on-click-modal":!0,class:"common-content-img",fit:"cover"},null,8,["src","preview-src-list"])]),Object(o["createElementVNode"])("p",g,[k,Object(o["createVNode"])(n,{src:Object(o["unref"])(i.a),"preview-src-list":[Object(o["unref"])(i.a),Object(o["unref"])(b.a),Object(o["unref"])(j.a)],"initial-index":4,"hide-on-click-modal":!0,class:"common-content-img",fit:"cover"},null,8,["src","preview-src-list"])]),Object(o["createElementVNode"])("div",v,[Object(o["createVNode"])(c,{svgClass:"common-sub-svg",iconName:"calculator"}),E]),Object(o["createElementVNode"])("p",h,[x,Object(o["createVNode"])(n,{src:Object(o["unref"])(s.a),"preview-src-list":[Object(o["unref"])(s.a)],"initial-index":4,"hide-on-click-modal":!0,class:"common-content-img",fit:"cover"},null,8,["src","preview-src-list"])]),w])]})),_:1})}}});const y=C;t["default"]=y},"5abd":function(e,t,c){e.exports=c.p+"img/commitConfig.f5c1aa67.jpg"},"66d4":function(e,t,c){e.exports=c.p+"img/ending.df3d7b49.png"},6871:function(e,t,c){e.exports=c.p+"img/reword.ad2b83c7.png"},"841b":function(e,t,c){},a8f1:function(e,t,c){"use strict";c("841b")},b174:function(e,t,c){e.exports=c.p+"img/commit1.688599a9.jpg"},b986:function(e,t,c){e.exports=c.p+"img/menu.02a37f5a.jpg"},ca79:function(e,t,c){e.exports=c.p+"img/wx.a34b4c18.jpg"},e8b8:function(e,t,c){e.exports=c.p+"img/commit.0525bebb.jpg"},f386:function(e,t,c){"use strict";c.r(t);var o=c("7a23"),n=c("536c"),l=c.n(n),m=Object(o["createElementVNode"])("div",{class:"common-title"},"husky 简介及配置",-1),s={class:"common-content"},a={class:"common-sub-title"},i=Object(o["createElementVNode"])("span",null,"husky 是什么",-1),r=Object(o["createElementVNode"])("p",{class:"common-content-block"}," husky 是一个Githooks工具。Githooks简单来说那就是类似Vue的生命周期钩子 一样，Git也会在它运行周期里面的某些时间点，让用户添加和执行自定义的函数。项目中Githooks能做什么？ ",-1),b=Object(o["createElementVNode"])("p",{class:"common-contentb-block common-ul-li"}," 问题：远程仓库的代码中存在语法错误 ",-1),d=Object(o["createElementVNode"])("p",{class:"common-contentb-block common-ul-li"}," 原因：有成员没有仔细检查，误把有语法错误的代码上传了 ",-1),j=Object(o["createElementVNode"])("p",{class:"common-contentb-block common-ul-li"}," 解决方法：在commit之前检查在暂存区的代码，看是否存在语法错误 ",-1),u=Object(o["createElementVNode"])("p",{class:"common-content-block"}," 如果只靠当前成员去检查自己添加到暂存区的代码有没有错误，是很不可靠且低效的行为，那么这里我们可以用到pre-commit这一个hook了，它可以在git commit之前执行我们自定义的语句，当执行错误或者返回非0状态的时候阻止commit行为。 ",-1),p={class:"common-sub-title"},O=Object(o["createElementVNode"])("span",null,"husky 配置",-1),N={class:"common-content-block"},f=Object(o["createTextVNode"])(' 下图中创建hooks命令换位npx husky add .husky/pre-commit "yarn lint"，即可配合eslint使用。 '),V=Object(o["createElementVNode"])("p",{class:"common-content-block"},[Object(o["createTextVNode"])(" 文档地址： "),Object(o["createElementVNode"])("a",{target:"_bank",href:"https://typicode.github.io/husky"}," https://typicode.github.io/husky ")],-1),g=Object(o["defineComponent"])({setup:function(e){return function(e,t){var c=Object(o["resolveComponent"])("svg-icon"),n=Object(o["resolveComponent"])("el-image"),g=Object(o["resolveComponent"])("el-card");return Object(o["openBlock"])(),Object(o["createBlock"])(g,{class:"common-card"},{default:Object(o["withCtx"])((function(){return[m,Object(o["createElementVNode"])("div",s,[Object(o["createElementVNode"])("div",a,[Object(o["createVNode"])(c,{svgClass:"common-sub-svg",iconName:"search"}),i]),r,b,d,j,u,Object(o["createElementVNode"])("div",p,[Object(o["createVNode"])(c,{svgClass:"common-sub-svg",iconName:"multiuser"}),O]),Object(o["createElementVNode"])("p",N,[f,Object(o["createVNode"])(n,{src:Object(o["unref"])(l.a),"preview-src-list":[Object(o["unref"])(l.a)],"initial-index":4,"hide-on-click-modal":!0,class:"common-content-img",fit:"cover"},null,8,["src","preview-src-list"])]),V])]})),_:1})}}});const k=g;t["default"]=k},fefd:function(e,t,c){"use strict";c.r(t);var o=c("7a23"),n=c("b986"),l=c.n(n),m=Object(o["createElementVNode"])("div",{class:"common-title"},"为什么要遵循编程规范",-1),s={class:"common-content"},a={class:"common-sub-title"},i=Object(o["createElementVNode"])("span",null,"编程规范的意义",-1),r=Object(o["createElementVNode"])("p",{class:"common-content-block"}," 俗话说，无规矩不成方圆。在实际研发中，可能存在研发维护人员的更替或者由于长时间不维护项目造成的记忆模糊、混乱等情况， 导致对代码所实现的真正功能的理解有困难和歧义。 ",-1),b=Object(o["createElementVNode"])("p",{class:"common-content-block"}," 编码风格的不同，对项目也会有不同的影响，统一的编码规范有益于提高研发 效率、降低后期维护开发的成本，也提高了代码复查效率和效果。 ",-1),d={class:"common-sub-title"},j=Object(o["createElementVNode"])("span",null,"高质量代码编写原则",-1),u=Object(o["createElementVNode"])("b",null,"a. 增加代码可读性 -- 注释清晰、命名语义化",-1),p=Object(o["createElementVNode"])("b",null,"b. 提高代码重用性 -- 公共组件和私有组件的维护",-1),O=Object(o["createElementVNode"])("p",{class:"common-contentb-block"}," 设计公用组件时需要考虑让接口保持弹性，并且高度模块化，多处重复使用不允许轻易被修改， 必要时需要提供 REAME.md 使用说明或规范的API 文档和演示 DEMO。 ",-1),N=Object(o["createElementVNode"])("b",null,"c. 尽可能的减少冗余和精简代码",-1),f=Object(o["createElementVNode"])("p",{class:"common-contentb-block"}," 通过尽可能精简的代码和优秀的算法，使代码加载和使用方便的同时往精简靠拢，前端部分体现：loder按需加载组件、es6箭头函数使用等。 ",-1),V=Object(o["createElementVNode"])("b",null,"d. 磨刀不误砍柴工 -- 前期的构思很重要",-1),g=Object(o["createElementVNode"])("p",{class:"common-contentb-block"}," 构思内容为规范的制定、公共组件的设计和复杂功能的技术方案等。 ",-1),k=Object(o["createElementVNode"])("b",null,"e. codeReview",-1),v=Object(o["createElementVNode"])("p",{class:"common-contentb-block"}," codeReview主要目的是为了发现错误、健壮性检查（代码是否健壮，是否有潜在安全、性能风险）、质量保证（在一般情况下，新提交的代码一定需要测试）、统一风格、互相学习。 ",-1),E={class:"common-sub-title"},h=Object(o["createElementVNode"])("span",null,"基本规范",-1),x=Object(o["createElementVNode"])("b",null,"1. 文件资源命名",-1),w=Object(o["createElementVNode"])("p",{class:"common-contentb-block"}," 以可读性而言，用小写字母命名、小写字母与下划线组合命名文件名、文件夹和图片，尽量使用语义化，与业务或功能相关的词来命名（比如file_upload、home_top_img.png）。 ",-1),C=Object(o["createElementVNode"])("p",{class:"common-contentb-block"}," 确保文件命名总是以字母开头而不是数字。 ",-1),y=Object(o["createElementVNode"])("p",{class:"common-contentb-block"}," 特殊含义的文件，需要对文件增加前后缀或特定的扩展名（比如 .min.js, .min.css, .config.json），抑或一串前缀（比如 all.main.min.css）。 ",-1),_=Object(o["createElementVNode"])("b",null,"2. 组件结构化",-1),B={class:"common-contentb-block"},T=Object(o["createTextVNode"])(" 目录按照组织结构进行创建，使得组件便于理解。前端示例如下图： "),G=Object(o["createElementVNode"])("b",null,"3. 函数命名",-1),M=Object(o["createElementVNode"])("p",{class:"common-contentb-block"}," can：判断是否可执行某个动作，函数返回一个布尔值。 ",-1),P=Object(o["createElementVNode"])("p",{class:"common-contentb-block"}," has：判断是否含有某个值， 函数返回一个布尔值。 ",-1),R=Object(o["createElementVNode"])("p",{class:"common-contentb-block"}," is：判断是否为某个值，函数返回一个布尔值。 ",-1),z=Object(o["createElementVNode"])("p",{class:"common-contentb-block"}," get：获取某些数据，函数返回一个非布尔值。 ",-1),A=Object(o["createElementVNode"])("p",{class:"common-contentb-block"}," set：设置某个值，无返回值、返回是否设置成功或者返回链式对象。 ",-1),I=Object(o["createElementVNode"])("p",{class:"common-contentb-block"}," load：加载某些数据,无返回值或者返回是否加载完成的结果。 ",-1),J=Object(o["createElementVNode"])("b",null,"4. CSS BEM",-1),S=Object(o["createElementVNode"])("p",{class:"common-contentb-block"}," BEM 的意思就是块（block）、元素（element）、修饰符（modifier），是由 Yandex团队提出的一种前端命名方法论。 ",-1),D=Object(o["createElementVNode"])("p",{class:"common-contentb-block"}," block代表了更高级别的抽象或组件, 命名约定的模式是.block{}，如.form{}。 ",-1),L=Object(o["createElementVNode"])("p",{class:"common-contentb-block"}," element代表block的后代，命名约定的模式是.block__element{}，如.form__button{}。 ",-1),Y=Object(o["createElementVNode"])("p",{class:"common-contentb-block"}," modifier表示block的不同状态或不同版本，命名约定的模式是block--modifier，如.form__button--blue{}。 ",-1),$=Object(o["createElementVNode"])("b",null,"5. Eslint + Prettier",-1),q=Object(o["createElementVNode"])("p",{class:"common-contentb-block"},[Object(o["createTextVNode"])(" 预先制定编码规范，使用 Eslint + Prettier 工具检测代码风格，可以辅助编码规范执行，有效控制代码质量。EsLint 用来校验代码规范，Prettier用来统一代码风格，格式化代码。支持 js、ts、css、less、scss、json、jsx。而且集成了 vscode、vim、webstorm、sublime text 插件。点击链接 "),Object(o["createElementVNode"])("a",{target:"_blank",href:"https://eslint.org/docs/user-guide/getting-started"}," Eslint "),Object(o["createTextVNode"])(" 了解具体规则。 ")],-1),F=Object(o["defineComponent"])({setup:function(e){return function(e,t){var c=Object(o["resolveComponent"])("svg-icon"),n=Object(o["resolveComponent"])("el-image"),F=Object(o["resolveComponent"])("el-card");return Object(o["openBlock"])(),Object(o["createBlock"])(F,{class:"common-card"},{default:Object(o["withCtx"])((function(){return[m,Object(o["createElementVNode"])("div",s,[Object(o["createElementVNode"])("div",a,[Object(o["createVNode"])(c,{svgClass:"common-sub-svg",iconName:"hairpin"}),i]),r,b,Object(o["createElementVNode"])("div",d,[Object(o["createVNode"])(c,{svgClass:"common-sub-svg",iconName:"edit"}),j]),u,p,O,N,f,V,g,k,v,Object(o["createElementVNode"])("div",E,[Object(o["createVNode"])(c,{svgClass:"common-sub-svg",style:{"margin-bottom":"2px"},iconName:"cakes"}),h]),x,w,C,y,_,Object(o["createElementVNode"])("p",B,[T,Object(o["createVNode"])(n,{class:"common-content-img",src:Object(o["unref"])(l.a),"preview-src-list":[Object(o["unref"])(l.a)],"initial-index":4,"hide-on-click-modal":!0,fit:"cover"},null,8,["src","preview-src-list"])]),G,M,P,R,z,A,I,J,S,D,L,Y,$,q])]})),_:1})}}});const H=F;t["default"]=H}}]);
//# sourceMappingURL=page.a082e6d5.js.map